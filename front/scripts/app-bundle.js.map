{"version":3,"sources":["app.js","environment.js","main.js","todo.js","app/profile.js","components/bootstrap-tooltip.js","components/channel-list.js","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/chat-main.js","components/chat.js","components/contact-list.js","components/navbar.js","data/web-api.js","resources/index.js","components/chat-tile.js","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/app.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/channel-list.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/chat-main.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/chat.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/contact-list.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/leftView.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/rightView.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/sidebar-footer.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/sidebar-menu.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/sidebar-profile.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/top-nav.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/users/login.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/views/layout-app.html","C:/Users/Jonathan/Desktop/RMIT/Building IT Systems - Mumble/mumble-1/front/src/components/chat-tile.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router} from 'aurelia-router';\r\n\r\nexport class App {\r\n  static inject() { return [Router]; }\r\n\r\n  constructor(router) {\r\n    this.router = router;\r\n    this.router.configure(this.configureRoutes);\r\n  }\r\n  configureRoutes(cfg) {\r\n    cfg.title = '... mumble';\r\n    cfg.map([\r\n      { route: ['', 'home'], moduleId: 'components/chat', title: 'home' },\r\n      { route: 'contacts/:id',  moduleId: 'contact-detail', name: 'contacts' },\r\n      { route: 'account/login', name: 'login',  moduleId: 'users/login'},\r\n      { route: 'account/register', name: 'register',  moduleId: 'users/register'}\r\n    ]);\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}","export class Todo {\r\n  constructor(description) {\r\n    this.description = description;\r\n    this.done = false;\r\n  }\r\n}","import {WebAPI} from '../data/web-api';\r\n\r\nexport class Profile {\r\n    static inject() { return [WebAPI] };\r\n\r\n    constructor(api) {\r\n        this.api = api;\r\n        this.contacts = [];\r\n        this.user = '';\r\n    }\r\n\r\n    getUser(userId) {\r\n        this.api.getContactDetails(userId).then(user => this.user = user);\r\n        return this.user;\r\n    }\r\n\r\n    getProfile() {\r\n        return this.api.getProfile();\r\n    }\r\n}","import {customAttribute, inject} from 'aurelia-framework';\r\nimport $ from \"bootstrap\";\r\n\r\n@customAttribute('bootstrap-tooltip')\r\n@inject(Element)\r\n\r\nexport class BootstrapTooltip {\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  bind() {\r\n    $(this.element).tooltip();\r\n  }\r\n\r\n  unbind() {\r\n    $(this.element).tooltip('destroy');\r\n  }\r\n}\r\n","import {WebAPI} from '../data/web-api';\r\n\r\nexport class ChannelList {\r\n  static inject() { return [WebAPI] };\r\n\r\n  constructor(api){\r\n    this.api = api;\r\n    this.channels = [];\r\n  }\r\n\r\n  created(){\r\n    this.api.getChannelList().then(channels => this.channels = channels);\r\n  }\r\n\r\n  select(channel){\r\n    this.selectedId = channel.id;\r\n    return true;\r\n  }\r\n}",null,"import {Profile} from '../app/profile';\r\nimport {inject} from 'aurelia-framework';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\n@inject(Profile)\r\nexport class Chat {\r\n\r\n  constructor(profile) {\r\n    this.profile = profile;\r\n    this.account = profile.getProfile();\r\n    this.appName = 'mumble';\r\n    this.navigation = 1;\r\n  }\r\n\r\n  fullName() {\r\n    console.log('printing account1');\r\n    console.log(this.account);\r\n    return `${this.account.firstName} ${this.account.lastName}`;\r\n  }\r\n\r\n  toggleNavigation() {\r\n    if (this.navigation == 2) {\r\n      this.navigation = 1;\r\n    }\r\n    else {\r\n      this.navigation = 2;\r\n    }\r\n  }\r\n}\r\n","import {WebAPI} from '../data/web-api';\r\nlet alertDelay = 5000; \r\n\r\nexport class ContactList {\r\n  static inject() { return [WebAPI] };\r\n\r\n  constructor(api){\r\n    this.api = api;\r\n    this.contacts = [];\r\n  }\r\n\r\n  created(){\r\n    this.api.getContactList().then(contacts => this.contacts = contacts);\r\n  }\r\n\r\n  refresh(contact) {\r\n    if (contact.unreadMsgs >= 1) {\r\n      contact.unreadMsgs = 0;\r\n      contact.alert = 3;\r\n    }\r\n    else {\r\n      contact.unreadMsgs = 2; //EXAMPLE OF MSG POPPING UP\r\n      setTimeout(() => {\r\n          contact.alert = 2;\r\n      }, alertDelay);\r\n      contact.alert = 1;\r\n    }\r\n  }\r\n}","import {customAttribute, inject} from 'aurelia-framework';\r\nimport $ from 'jquery';\r\n\r\n@customAttribute('navbar')\r\n@inject(Element)\r\nexport class navbar {\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.parent = $(element).parent();\r\n    console.log(this.parent); //this.parent is valid here\r\n  }\r\n  attached() {\r\n    this.element.addEventListener('click', () =>  this.open());\r\n    console.log(this.parent); //this.parent is valid here\r\n  }\r\n  deattached() {\r\n    this.element.removeEventListener('click', () =>  this.open());\r\n  }\r\n  open() {\r\n    console.log(this.element);\r\n    console.log(this.parent);\r\n    if ($(this.parent).is('.active')) {\r\n      console.log('Is active');\r\n      $(this.parent).removeClass('active active-sm');\r\n      $('ul:first', this.parent).slideUp();\r\n    } else {\r\n      console.log('Is not active');\r\n      $(this.parent).addClass('active');\r\n      $('ul:first', this.parent).slideDown();\r\n    }\r\n  }\r\n}\r\n","let latency = 200; //To mimic a real connection\r\nlet id = 0;\r\n\r\nfunction getId() {\r\n  return ++id;\r\n}\r\nlet myAccount = {\r\n    id: getId(),\r\n    firstName: 'Jonathan',\r\n    lastName: 'Philipos',\r\n    email: 'jonathan@det.io',\r\n    phoneNumber: '867-5309',\r\n    isOnline: 'online',\r\n    icon: 'face5.ico'\r\n}\r\nlet contacts = [\r\n  {\r\n    id: getId(),\r\n    firstName: 'John',\r\n    lastName: 'Tolkien',\r\n    email: 'tolkien@inklings.com',\r\n    phoneNumber: '867-5309',\r\n    isOnline: 'online',\r\n    unreadMsgs: 0,\r\n    icon: 'face.ico'\r\n  },\r\n  {\r\n    id: getId(),\r\n    firstName: 'Clive',\r\n    lastName: 'Lewis',\r\n    email: 'lewis@inklings.com',\r\n    phoneNumber: '867-5309',\r\n    isOnline: 'online',\r\n    unreadMsgs: 4,\r\n    icon: 'face2.ico'\r\n  },\r\n  {\r\n    id: getId(),\r\n    firstName: 'Owen',\r\n    lastName: 'Barfield',\r\n    email: 'barfield@inklings.com',\r\n    phoneNumber: '867-5309',\r\n    isOnline: 'offline',\r\n    unreadMsgs: 0,\r\n    icon: 'face3.ico'\r\n  },\r\n  {\r\n    id: getId(),\r\n    firstName: 'Charles',\r\n    lastName: 'Williams',\r\n    email: 'williams@inklings.com',\r\n    phoneNumber: '867-5309',\r\n    isOnline: 'away',\r\n    unreadMsgs: 1,\r\n    icon: 'face4.ico'\r\n  },\r\n  {\r\n    id: getId(),\r\n    firstName: 'Roger',\r\n    lastName: 'Green',\r\n    email: 'green@inklings.com',\r\n    phoneNumber: '867-5309',\r\n    isOnline: 'offline',\r\n    unreadMsgs: 0,\r\n    icon: 'face5.ico'\r\n  }\r\n];\r\nid = 0;\r\nlet activeChats = [\r\n  {\r\n    id: getId(),\r\n    type: 'message', //message or channel\r\n    title: 'Michael Long', //Title of chat\r\n    messages: [ //array of messages (store only upto 100 messages locally, rest should be archived.)\r\n      {\r\n        from: 2,\r\n        data: 'Hey bro, I really need your help on some stuff..',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      },\r\n      {\r\n        from: 1,\r\n        data: 'What do you need?',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      },\r\n      {\r\n        from: 2,\r\n        data: 'Im stuck on this issue, and cannot debug it.. Can you help?',\r\n        attachments: [\r\n          {\r\n            type: 'image',\r\n            id: 'error.png'\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        from: 1,\r\n        data: 'That means that you are breaking the syntax rules, you need to check the documentation and follow their parameters.',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: getId(),\r\n    type: 'channel',\r\n    title: 'Development',\r\n    messages: [\r\n      {\r\n        from: 3,\r\n        data: 'Hey guys, how\\'s the app developing so far?',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      },\r\n      {\r\n        from: 1,\r\n        data: 'Buggy buggy, we need more resources or time to get this done.',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      },\r\n      {\r\n        from: 4,\r\n        data: 'Yea, this is no where close to release.',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      },\r\n      {\r\n        from: 3,\r\n        data: 'Hey guys, how\\'s the app developing so far?',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: getId(),\r\n    type: 'channel', //message or channel\r\n    title: 'General', //Title of chat\r\n    messages: [ //array of messages (store only upto 100 messages locally, rest should be archived.)\r\n      {\r\n        from: 5,\r\n        data: 'Can someone link me with a good Ember tutorial?',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      },\r\n      {\r\n        from: 1,\r\n        data: '',\r\n        date: '2012-04-23T18:25:43.511Z',\r\n        attachments: [\r\n          {\r\n            type: 'video',\r\n            id: 'T1SC44NJA_A'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        from: 4,\r\n        data: 'Very informative.',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      },\r\n      {\r\n        from: 3,\r\n        data: 'Who can link me with a borat movie!',\r\n        date: '2012-04-23T18:25:43.511Z'\r\n      }\r\n    ]\r\n  }\r\n]\r\nid = 0;\r\nlet channels = [\r\n  {\r\n    id: getId(),\r\n    channelName: 'General'\r\n  },\r\n  {\r\n    id: getId(),\r\n    channelName: 'Development'\r\n  },\r\n  {\r\n    id: getId(),\r\n    channelName: 'Design'\r\n  }\r\n];\r\n\r\nexport class WebAPI {\r\n  isRequesting = false;\r\n\r\n  getContactList() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n          let results = contacts.map(x => {\r\n              return {\r\n                  id: x.id,\r\n                  firstName: x.firstName,\r\n                  lastName: x.lastName,\r\n                  email: x.email,\r\n                  isOnline: x.isOnline,\r\n                  alert: 1,\r\n                  unreadMsgs: x.unreadMsgs\r\n                };\r\n            });\r\n          resolve(results);\r\n          this.isRequesting = false;\r\n        }, latency);\r\n    });\r\n  }\r\n  getMsgs() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n          let results = activeChats.map(x => {\r\n              return {\r\n                  id: x.id,\r\n                  type: x.type,\r\n                  title: x.title,\r\n                  messages: x.messages\r\n                };\r\n            });\r\n          resolve(results);\r\n          this.isRequesting = false;\r\n        }, latency);\r\n    });\r\n  }\r\n  getChannelList() {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n          let results = channels.map(x => {\r\n              return {\r\n                  id: x.id,\r\n                  channelName: x.channelName,\r\n                  users: ['User1', 'User2', 'User3']\r\n                };\r\n            });\r\n          resolve(results);\r\n          this.isRequesting = false;\r\n        }, latency);\r\n    });\r\n  }\r\n  getContactDetails(id) {\r\n    let found = contacts.filter(x => x.id == id)[0];\r\n    return found;\r\n  }\r\n  getProfile() {\r\n    return myAccount;\r\n  }\r\n  saveContact(contact) {\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            let instance = JSON.parse(JSON.stringify(contact));\r\n            let found = contacts.filter(x => x.id == contact.id)[0];\r\n\r\n            if (found) {\r\n                let index = contacts.indexOf(found);\r\n                contacts[index] = instance;\r\n              } else {\r\n                instance.id = getId();\r\n                contacts.push(instance);\r\n              }\r\n\r\n            this.isRequesting = false;\r\n            resolve(instance);\r\n          }, latency);\r\n      });\r\n  }\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {WebAPI} from '../data/web-api';\r\nimport {Profile} from '../app/profile';\r\nimport {inject} from 'aurelia-framework';\r\n\r\n@inject(WebAPI, Profile)\r\nexport class chatTile {\r\n\r\n    constructor(api, profile) {\r\n        this.profile = profile;\r\n        this.api = api;\r\n        this.account = profile.getProfile();\r\n        this.activeChats = [];\r\n    }\r\n\r\n    created() {\r\n        this.api.getMsgs().then(activeChats => this.activeChats = activeChats);\r\n    }\r\n\r\n    userDetails(userId) {\r\n        if (userId == 1) {\r\n            return this.api.getProfile();\r\n        }\r\n        else {\r\n            return this.api.getContactDetails(userId);\r\n        }\r\n    }\r\n\r\n    displayChats() {\r\n        alert('Display chats called');\r\n        console.log('Folllowed by activechats array: [] ');\r\n        console.log(this.activeChats);\r\n    }\r\n}",null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"..\\src"}